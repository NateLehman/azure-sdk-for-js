/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreHttp from "@azure/core-http";
import {
  DigitalTwinModelsImpl,
  QueryImpl,
  DigitalTwinsImpl,
  EventRoutesImpl
} from "./operations";
import {
  DigitalTwinModels,
  Query,
  DigitalTwins,
  EventRoutes
} from "./operationsInterfaces";
import { AzureDigitalTwinsAPIOptionalParams } from "./models";

const packageName = "@azure/digital-twins-core";
const packageVersion = "1.1.0-beta.1";

export class AzureDigitalTwinsAPI extends coreHttp.ServiceClient {
  $host: string;
  apiVersion: string;

  /**
   * Initializes a new instance of the AzureDigitalTwinsAPI class.
   * @param options The parameter options
   */
  constructor(options?: AzureDigitalTwinsAPIOptionalParams) {
    // Initializing default values for options
    if (!options) {
      options = {};
    }

    const defaultUserAgent = `azsdk-js-${packageName.replace(
      /@.*\//,
      ""
    )}/${packageVersion} ${coreHttp.getDefaultUserAgentValue()}`;

    super(undefined, {
      ...options,
      userAgent: options.userAgent
        ? `${options.userAgent} ${defaultUserAgent}`
        : `${defaultUserAgent}`
    });

    this.requestContentType = "application/json; charset=utf-8";
    this.baseUri = options.endpoint ?? "https://digitaltwins-hostname";

    // Assigning values to Constant parameters
    this.$host = options.$host || "https://digitaltwins-hostname";
    this.apiVersion = options.apiVersion || "2021-06-30-preview";
    this.digitalTwinModels = new DigitalTwinModelsImpl(this);
    this.query = new QueryImpl(this);
    this.digitalTwins = new DigitalTwinsImpl(this);
    this.eventRoutes = new EventRoutesImpl(this);
  }

  digitalTwinModels: DigitalTwinModels;
  query: Query;
  digitalTwins: DigitalTwins;
  eventRoutes: EventRoutes;
}
